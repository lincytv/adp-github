{"ast":null,"code":"/*! @azure/msal-browser v2.18.0 2021-10-05 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AuthError, ThrottlingUtils, UrlString } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { EventType } from '../event/EventType.js';\nimport { InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { PopupHandler } from '../interaction_handler/PopupHandler.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar PopupClient =\n/** @class */\nfunction (_super) {\n  __extends(PopupClient, _super);\n\n  function PopupClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n   * @param request\r\n   */\n\n\n  PopupClient.prototype.acquireToken = function (request) {\n    try {\n      var validRequest = this.preflightInteractiveRequest(request, InteractionType.Popup);\n      var popupName = PopupUtils.generatePopupName(this.config.auth.clientId, validRequest);\n      var popupWindowAttributes = request.popupWindowAttributes || {}; // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true, acquiring token\"); // Passes on popup position and dimensions if in request\n\n        return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before acquiring token.\n        this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n        var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n        return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes, popup);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n   * @param logoutRequest\r\n   */\n\n\n  PopupClient.prototype.logout = function (logoutRequest) {\n    try {\n      this.logger.verbose(\"logoutPopup called\");\n      var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n      var popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\n      var authority = logoutRequest && logoutRequest.authority;\n      var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n      var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {}; // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true\"); // Passes on popup position and dimensions if in request\n\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before logging out.\n        this.logger.verbose(\"asyncPopup set to false, opening popup\");\n        var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n      }\n    } catch (e) {\n      // Since this function is synchronous we need to reject\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param popup\r\n   * @param popupWindowAttributes\r\n   *\r\n   * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n   */\n\n\n  PopupClient.prototype.acquireTokenPopupAsync = function (validRequest, popupName, popupWindowAttributes, popup) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, authCodeRequest, authClient, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, state, result, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"acquireTokenPopupAsync called\");\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(validRequest)];\n\n          case 2:\n            authCodeRequest = _a.sent();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\n\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(validRequest)];\n\n          case 4:\n            navigateUrl = _a.sent();\n            interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\n            popupParameters = {\n              popup: popup,\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes\n            };\n            popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            return [4\n            /*yield*/\n            , interactionHandler.monitorPopupForHash(popupWindow)];\n\n          case 5:\n            hash = _a.sent();\n            state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId); // Remove throttle if it exists\n\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            return [4\n            /*yield*/\n            , interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient)];\n\n          case 6:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n\n          case 7:\n            e_1 = _a.sent();\n\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n\n            if (e_1 instanceof AuthError) {\n              e_1.setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e_1);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e_1;\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param requestAuthority\r\n   * @param popup\r\n   * @param mainWindowRedirectUri\r\n   * @param popupWindowAttributes\r\n   */\n\n\n  PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, authClient, logoutUri, popupUtils, popupWindow, e_2, navigationOptions, absoluteUrl, e_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"logoutPopupAsync called\");\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 8,, 9]); // Clear cache on logout\n\n\n            return [4\n            /*yield*/\n            , this.clearCacheOnLogout(validRequest.account)];\n\n          case 2:\n            // Clear cache on logout\n            _a.sent();\n\n            this.browserStorage.setInteractionInProgress(true);\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\n\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n            popupUtils = new PopupUtils(this.browserStorage, this.logger);\n            popupWindow = popupUtils.openPopup(logoutUri, {\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes,\n              popup: popup\n            });\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]); // Don't care if this throws an error (User Cancelled)\n\n\n            return [4\n            /*yield*/\n            , popupUtils.monitorPopupForSameOrigin(popupWindow)];\n\n          case 5:\n            // Don't care if this throws an error (User Cancelled)\n            _a.sent();\n\n            this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_2 = _a.sent();\n            this.logger.verbose(\"Error occurred while monitoring popup for same origin. Session on server may remain active. Error: \" + e_2);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            popupUtils.cleanPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n              navigationOptions = {\n                apiId: ApiId.logoutPopup,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n              };\n              absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n              this.logger.verbose(\"Redirecting main window to url specified in the request\");\n              this.logger.verbosePii(\"Redirecing main window to: \" + absoluteUrl);\n              this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n              this.logger.verbose(\"No main window navigation requested\");\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_3 = _a.sent();\n\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n\n            if (e_3 instanceof AuthError) {\n              e_3.setCorrelationId(this.correlationId);\n            }\n\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_3);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e_3);\n            throw e_3;\n\n          case 9:\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return PopupClient;\n}(StandardInteractionClient);\n\nexport { PopupClient };","map":{"version":3,"sources":["/home/shinto/allianz/angular/adp-github/adp-github/node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.js"],"names":["__extends","__awaiter","__generator","AuthError","ThrottlingUtils","UrlString","StandardInteractionClient","PopupUtils","EventType","InteractionType","ApiId","PopupHandler","BrowserUtils","PopupClient","_super","apply","arguments","prototype","acquireToken","request","validRequest","preflightInteractiveRequest","Popup","popupName","generatePopupName","config","auth","clientId","popupWindowAttributes","system","asyncPopups","logger","verbose","acquireTokenPopupAsync","popup","openSizedPopup","e","Promise","reject","logout","logoutRequest","validLogoutRequest","initializeLogoutRequest","generateLogoutPopupName","authority","mainWindowRedirectUri","logoutPopupAsync","undefined","serverTelemetryManager","authCodeRequest","authClient","navigateUrl","interactionHandler","popupParameters","popupWindow","hash","state","result","e_1","_a","label","initializeServerTelemetryManager","acquireTokenPopup","trys","push","initializeAuthorizationCodeRequest","sent","createAuthCodeClient","getAuthCodeUrl","browserStorage","initiateAuthRequest","eventHandler","emitEvent","POPUP_OPENED","monitorPopupForHash","validateAndExtractStateFromHash","correlationId","removeThrottle","handleCodeResponse","networkClient","close","setCorrelationId","cacheFailedRequest","cleanRequestByState","requestAuthority","logoutUri","popupUtils","e_2","navigationOptions","absoluteUrl","e_3","LOGOUT_START","logoutPopup","clearCacheOnLogout","account","setInteractionInProgress","getLogoutUri","LOGOUT_SUCCESS","openPopup","monitorPopupForSameOrigin","cleanPopup","apiId","timeout","redirectNavigationTimeout","noHistory","getAbsoluteUrl","getCurrentUri","verbosePii","navigationClient","navigateInternal","LOGOUT_FAILURE","LOGOUT_END"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.18.0 2021-10-05 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AuthError, ThrottlingUtils, UrlString } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { EventType } from '../event/EventType.js';\nimport { InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { PopupHandler } from '../interaction_handler/PopupHandler.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar PopupClient = /** @class */ (function (_super) {\r\n    __extends(PopupClient, _super);\r\n    function PopupClient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     */\r\n    PopupClient.prototype.acquireToken = function (request) {\r\n        try {\r\n            var validRequest = this.preflightInteractiveRequest(request, InteractionType.Popup);\r\n            var popupName = PopupUtils.generatePopupName(this.config.auth.clientId, validRequest);\r\n            var popupWindowAttributes = request.popupWindowAttributes || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes, popup);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    PopupClient.prototype.logout = function (logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            var popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\r\n            var authority = logoutRequest && logoutRequest.authority;\r\n            var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    PopupClient.prototype.acquireTokenPopupAsync = function (validRequest, popupName, popupWindowAttributes, popup) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, authCodeRequest, authClient, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, state, result, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 7, , 8]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\r\n                        popupParameters = {\r\n                            popup: popup,\r\n                            popupName: popupName,\r\n                            popupWindowAttributes: popupWindowAttributes\r\n                        };\r\n                        popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        return [4 /*yield*/, interactionHandler.monitorPopupForHash(popupWindow)];\r\n                    case 5:\r\n                        hash = _a.sent();\r\n                        state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId);\r\n                        // Remove throttle if it exists\r\n                        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient)];\r\n                    case 6:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 7:\r\n                        e_1 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_1 instanceof AuthError) {\r\n                            e_1.setCorrelationId(this.correlationId);\r\n                        }\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequestByState(validRequest.state);\r\n                        throw e_1;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, authClient, logoutUri, popupUtils, popupWindow, e_2, navigationOptions, absoluteUrl, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"logoutPopupAsync called\");\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 8, , 9]);\r\n                        // Clear cache on logout\r\n                        return [4 /*yield*/, this.clearCacheOnLogout(validRequest.account)];\r\n                    case 2:\r\n                        // Clear cache on logout\r\n                        _a.sent();\r\n                        this.browserStorage.setInteractionInProgress(true);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        logoutUri = authClient.getLogoutUri(validRequest);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n                        popupUtils = new PopupUtils(this.browserStorage, this.logger);\r\n                        popupWindow = popupUtils.openPopup(logoutUri, { popupName: popupName, popupWindowAttributes: popupWindowAttributes, popup: popup });\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        // Don't care if this throws an error (User Cancelled)\r\n                        return [4 /*yield*/, popupUtils.monitorPopupForSameOrigin(popupWindow)];\r\n                    case 5:\r\n                        // Don't care if this throws an error (User Cancelled)\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        this.logger.verbose(\"Error occurred while monitoring popup for same origin. Session on server may remain active. Error: \" + e_2);\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        popupUtils.cleanPopup(popupWindow);\r\n                        if (mainWindowRedirectUri) {\r\n                            navigationOptions = {\r\n                                apiId: ApiId.logoutPopup,\r\n                                timeout: this.config.system.redirectNavigationTimeout,\r\n                                noHistory: false\r\n                            };\r\n                            absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\r\n                            this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                            this.logger.verbosePii(\"Redirecing main window to: \" + absoluteUrl);\r\n                            this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No main window navigation requested\");\r\n                        }\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_3 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_3 instanceof AuthError) {\r\n                            e_3.setCorrelationId(this.correlationId);\r\n                        }\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_3);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        serverTelemetryManager.cacheFailedRequest(e_3);\r\n                        throw e_3;\r\n                    case 9:\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PopupClient;\r\n}(StandardInteractionClient));\n\nexport { PopupClient };\n"]},"metadata":{},"sourceType":"module"}